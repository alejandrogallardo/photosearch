{"version":3,"sources":["components/Buscador.js","components/Imagen.js","components/Paginacion.js","components/Resultado.js","App.js","serviceWorker.js","index.js"],"names":["Buscador","busquedaRef","React","createRef","obtenerDatos","e","preventDefault","termino","_this","current","value","props","datosBusqueda","react_default","a","createElement","onSubmit","this","className","ref","type","placeholder","Component","Imagen","_props$imagen","imagen","largeImageURL","likes","previewURL","tags","views","downloads","src","alt","href","target","Paginacion","onClick","paginaAnterior","paginaSiguiente","Resultado","mostrarImagenes","imagenes","length","console","log","Fragment","map","components_Imagen","key","id","components_Paginacion","App","state","pagina","scroll","document","querySelector","scrollIntoView","setState","consultarApi","datosUrl","url","concat","fetch","then","res","json","resultado","hits","components_Buscador","components_Resultado","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96bbfcb0.chunk.js","sourcesContent":["/**\r\n * En un componente de clase en react se\r\n * metodos de cliclo de vida \r\n * almacena stados, this\r\n */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Buscador extends Component {\r\n    \r\n    /**\r\n     * Permite leer los datos ingresados en el imput\r\n     */\r\n    busquedaRef = React.createRef();\r\n    \r\n    obtenerDatos = (e) => {\r\n        e.preventDefault();\r\n        // console.log( this.busquedaRef.current.value );\r\n\r\n        // Tomamos el valor del input\r\n        const termino = this.busquedaRef.current.value;\r\n\r\n        // Lo enviamos al componente principal\r\n        this.props.datosBusqueda( termino );\r\n    }\r\n    \r\n  render () {\r\n    return (\r\n      <form onSubmit={ this.obtenerDatos }>\r\n        <div className=\"row\">\r\n            <div className=\"form-group col-md-8\">\r\n                <input ref={ this.busquedaRef } type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Busca una imagen. Ejemplo: comida\" />\r\n            </div>\r\n            <div className=\"form-group col-md-4\">\r\n                <input type=\"submit\" className=\"btn btn-secondary btn-block\" value=\"Busca\" />\r\n            </div>\r\n        </div>\r\n      </form>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Buscador;","import React from 'react';\r\n\r\nconst Imagen = ( props ) => {\r\n\r\n    const { largeImageURL, likes, previewURL, tags, views, downloads } = props.imagen;\r\n\r\n    return (\r\n        <div className=\"col-sm-12 col-md-6 mb-4\">\r\n            <div className=\"card\">\r\n                <img src={ previewURL } alt={ tags } className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\"><i className=\"fas fa-heart\"></i> { likes } Me gusta</p>\r\n                    <p className=\"card-text\"><i className=\"fas fa-eye\"></i> { views } Vistas</p>\r\n                    <p className=\"card-text\"><i className=\"fas fa-cloud-download-alt\"></i> { downloads } Descargas</p>\r\n                    <a href={ largeImageURL } target=\"_blank\" className=\"btn btn-primary btn-block\" ><i className=\"fas fa-external-link-square-alt\"></i> Ver Imagen</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Imagen;","import React from 'react';\r\n\r\nconst Paginacion = props  => {\r\n    return (\r\n        <div className=\"py-3\">\r\n            <button onClick={ props.paginaAnterior } className=\"btn btn-info mr-1\">&larr; Anterios</button>\r\n            <button onClick={ props.paginaSiguiente } className=\"btn btn-info\">Siguiente &rarr;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginacion;","/**\r\n * <React.fragment>\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport Imagen from './Imagen';\r\nimport Paginacion from './Paginacion';\r\n\r\nclass Resultado extends Component {\r\n\r\n    mostrarImagenes = () => {\r\n        const imagenes = this.props.imagenes;\r\n        if ( imagenes.length === 0 ) return null; // para que no se ejecute el state cuando este vacio\r\n        console.log( imagenes );\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"col-12 p-5 row\">\r\n                  { imagenes.map( imagen => (\r\n                      <Imagen\r\n                          key={ imagen.id }\r\n                          imagen={ imagen }\r\n                      />\r\n                  ) ) }\r\n                </div>\r\n\r\n                <Paginacion \r\n                    paginaAnterior={ this.props.paginaAnterior }\r\n                    paginaSiguiente={ this.props.paginaSiguiente }\r\n                />    \r\n\r\n            </React.Fragment>\r\n          );\r\n\r\n    }\r\n\r\n  render () {\r\n    return (\r\n      <React.Fragment>\r\n          { this.mostrarImagenes() }\r\n      </React.Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default Resultado;","/**\n * Con props se pasa informacion de componente padre al hijo\n */\nimport React, { Component } from 'react';\nimport Buscador from './components/Buscador';\nimport Resultado from './components/Resultado';\n\nclass App extends Component {\n\n  /**\n   * state llave : valor\n   */\n  state = {\n    termino: '',\n    imagenes: [], // se va llenar cuando este la consulta\n    pagina: ''\n  }\n\n  /**\n   * \n   */\n  scroll = () => {\n    const elemento = document.querySelector('.jumbotron');\n    elemento.scrollIntoView('smooth', 'start');\n  }\n\n  /**\n   * Codigo del paginador\n   */\n  paginaAnterior = () => {\n    console.log('Pagina Anterior...');\n    // Leer el state de la pagina actual\n    let pagina = this.state.pagina;\n    // Si la pagina es 1 ya no ir hacia atras\n    if ( pagina === 1 ) return null;\n    // Sumar 1 a la pagina actual\n    pagina--;\n    // Agregar el cambio al state\n    this.setState({\n      pagina\n    }, () => {\n      this.consultarApi();\n      this.scroll();\n    });\n\n    console.log( pagina );\n  }\n  paginaSiguiente = () => {\n    console.log('Pagina Siguiente...');\n    // Leer el state de la pagina actual\n    let pagina = this.state.pagina;\n    // Sumar 1 a la pagina actual\n    pagina++;\n    // Agregar el cambio al state\n    this.setState({\n      pagina\n    }, () => {\n      this.consultarApi();\n      this.scroll();\n    });\n\n    console.log( pagina );\n  }\n\n  /**\n   * Cogigo de la api\n   */\n  consultarApi = () => {\n    const datosUrl = this.state.termino;\n    const pagina = this.state.pagina;\n    const url = `https://pixabay.com/api/?key=13086065-25764b3f9692cfccc8745b7be&q=${ datosUrl }&page=${ pagina }`;\n    console.log( url );\n    fetch( url )\n      .then(res => res.json() )\n      // .then( resultado => console.log( resultado.hits ) )\n      .then( resultado => this.setState({ imagenes: resultado.hits }) )\n  }\n\n  datosBusqueda = ( termino ) => {\n    console.log( termino );\n    this.setState({ // callback permite cambiar el estado de forma dinamica\n      termino: termino,\n      pagina: 1\n    }, () => {\n      this.consultarApi();\n    }) // agregalo al state y ejecuta esta funcion\n  }\n\n  render () {\n    return (\n      \n      <div className=\"container\">\n        <div className=\"jumbotron\">\n          <h1>Buscador de fotos</h1>\n          <Buscador\n            datosBusqueda={ this.datosBusqueda }\n          />\n          \n        </div>\n\n        <div className=\"row justify-content-center\">\n          <Resultado \n            paginaAnterior={ this.paginaAnterior }\n            paginaSiguiente={ this.paginaSiguiente }\n            imagenes={ this.state.imagenes }\n          />\n        </div>\n\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}